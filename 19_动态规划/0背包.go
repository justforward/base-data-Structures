package main

//0-1 背包

/* 二维写法
1）dp[i][j] 表示从下标为[0-i]的物品里任意取，放到容器为j的背包里面，价值总和最大是多少？
2) 递推公式：dp[i][j]=max(dp[i-1][j],dp[i][j-weight[i]]+value[i])
3) 初始化：对于容量
4）遍历顺序，都是从小到大遍历，先遍历物品和先遍历背包容量都是一样的。
*/

/*
一维写法:将二维数组压缩成一维数组，意味着将一维数组的值copy到二维数组中 重复利用一位数组的位置保存上一行的数据
1）dp[j]
2）dp[j]=max(dp[j],dp[j-weight[i]]+value[i])
3) 初始化
4）遍历顺序：先遍历物品，再遍历背包容量，记住背包的容量是从大到小，防止物品重复放入
*/

/*
 完全背包，物品是没有数量限制的，可以被无限次使用
遍历顺序，背包的容量是从小到大的，
*/
